<?php include_once('../../../common.php'); $uid = isset($_POST['uid']) ? $_POST['uid'] : ''; if (!$uid) { die(json_encode(['success' => false, 'message' => '잘못된 접근입니다.'])); } $date_folder = date('ymd'); $upload_dir = G5_DATA_PATH . '/editor/' . $date_folder; $upload_url = G5_DATA_URL . '/editor/' . $date_folder; if (!is_dir($upload_dir)) { @mkdir($upload_dir, G5_DIR_PERMISSION, true); @chmod($upload_dir, G5_DIR_PERMISSION); } $uploaded_files = []; $file_count = count($_FILES['bf_file']['name']); $webp_quality = 85; for ($i = 0; $i < $file_count; $i++) { $file = $_FILES['bf_file']['tmp_name'][$i]; $filename = $_FILES['bf_file']['name'][$i]; if (!isset($filename) || empty($filename)) { continue; } if (!preg_match("/\.(jpg|jpeg|gif|png|webp)$/i", $filename)) { continue; } $file_ext = strtolower(pathinfo($filename, PATHINFO_EXTENSION)); $temp_filepath = $upload_dir . '/temp_' . $uid . '_' . $i . '.' . $file_ext; if (!move_uploaded_file($file, $temp_filepath)) { continue; } $image_info = @getimagesize($temp_filepath); if (!$image_info) { @unlink($temp_filepath); continue; } if ($file_ext === 'webp') { $save_filename = $uid . '_' . $i . '.webp'; $save_filepath = $upload_dir . '/' . $save_filename; if (@rename($temp_filepath, $save_filepath)) { @chmod($save_filepath, G5_FILE_PERMISSION); $uploaded_files[] = [ 'url' => $upload_url . '/' . $save_filename, 'width' => $image_info[0], 'height' => $image_info[1] ]; } else { @unlink($temp_filepath); } continue; } $save_filename = $uid . '_' . $i . '.webp'; $save_filepath = $upload_dir . '/' . $save_filename; $success = false; $src_image = null; switch ($file_ext) { case 'jpg': case 'jpeg': $src_image = @imagecreatefromjpeg($temp_filepath); break; case 'png': $src_image = @imagecreatefrompng($temp_filepath); if ($src_image) { imagepalettetotruecolor($src_image); imagealphablending($src_image, false); imagesavealpha($src_image, true); } break; case 'gif': $src_image = @imagecreatefromgif($temp_filepath); break; } if ($src_image) { $success = @imagewebp($src_image, $save_filepath, $webp_quality); imagedestroy($src_image); if ($success) { @chmod($save_filepath, G5_FILE_PERMISSION); $uploaded_files[] = [ 'url' => $upload_url . '/' . $save_filename, 'width' => $image_info[0], 'height' => $image_info[1] ]; @unlink($temp_filepath); continue; } } $org_save_filename = $uid . '_' . $i . '.' . $file_ext; $org_save_filepath = $upload_dir . '/' . $org_save_filename; if (@rename($temp_filepath, $org_save_filepath)) { @chmod($org_save_filepath, G5_FILE_PERMISSION); $uploaded_files[] = [ 'url' => $upload_url . '/' . $org_save_filename, 'width' => $image_info[0], 'height' => $image_info[1] ]; } else { @unlink($temp_filepath); } } if (empty($uploaded_files)) { die(json_encode(['success' => false, 'message' => '업로드된 이미지가 없습니다.'])); } die(json_encode([ 'success' => true, 'files' => $uploaded_files ]));